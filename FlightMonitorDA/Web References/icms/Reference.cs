//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3662
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3662.
// 
#pragma warning disable 1591

namespace AirSoft.FlightMonitor.FlightMonitorDA.icms {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://www.hnair.com/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCRDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTrainBaseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetInfo_SkillCat9OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFleetInfo_SkillCat8OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetICAO_QualifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_ByLicenseTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_ByTechSkillInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_BySkillCatOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_ByInternationSkillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_FlyingHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewBasicInfo_SyncFHOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewBasicInfo_QARHoursOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewBasicInfo_LeavesTransOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_ProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_PromotionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_TechLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_CabinLicenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_CommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_LanguageSkillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_EnglishSkillOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_BodyCheckOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_VisaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_YellowOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_HTRNPASSOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_LessonOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_TrainCabinOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_Annoucement_OralOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewBasicInfo_ICAOLevelDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewBasicInfo_RosterAuditLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSkillParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRankParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCrewRankOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBasicCrewInfo_ByTechAllSkillOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::AirSoft.FlightMonitor.FlightMonitorDA.Properties.Settings.Default.AirSoft_FlightMonitor_FlightMonitorDA_net_hnair_icms_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCRDCompletedEventHandler GetCRDCompleted;
        
        /// <remarks/>
        public event GetCrewInfoCompletedEventHandler GetCrewInfoCompleted;
        
        /// <remarks/>
        public event GetCrewRecordsCompletedEventHandler GetCrewRecordsCompleted;
        
        /// <remarks/>
        public event GetCrewInformationCompletedEventHandler GetCrewInformationCompleted;
        
        /// <remarks/>
        public event GetTrainBaseCompletedEventHandler GetTrainBaseCompleted;
        
        /// <remarks/>
        public event GetFleetInfo_SkillCat9CompletedEventHandler GetFleetInfo_SkillCat9Completed;
        
        /// <remarks/>
        public event GetFleetInfo_SkillCat8CompletedEventHandler GetFleetInfo_SkillCat8Completed;
        
        /// <remarks/>
        public event GetICAO_QualifierCompletedEventHandler GetICAO_QualifierCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_ByLicenseTypeCompletedEventHandler GetBasicCrewInfo_ByLicenseTypeCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_ByTechSkillInfoCompletedEventHandler GetBasicCrewInfo_ByTechSkillInfoCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_BySkillCatCompletedEventHandler GetBasicCrewInfo_BySkillCatCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_ByInternationSkillCompletedEventHandler GetBasicCrewInfo_ByInternationSkillCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_FlyingHoursCompletedEventHandler GetBasicCrewInfo_FlyingHoursCompleted;
        
        /// <remarks/>
        public event GetCrewBasicInfo_SyncFHCompletedEventHandler GetCrewBasicInfo_SyncFHCompleted;
        
        /// <remarks/>
        public event GetCrewBasicInfo_QARHoursCompletedEventHandler GetCrewBasicInfo_QARHoursCompleted;
        
        /// <remarks/>
        public event GetCrewBasicInfo_LeavesTransCompletedEventHandler GetCrewBasicInfo_LeavesTransCompleted;
        
        /// <remarks/>
        public event GetParamCompletedEventHandler GetParamCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_ProfileCompletedEventHandler GetBasicCrewInfo_ProfileCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_PromotionCompletedEventHandler GetBasicCrewInfo_PromotionCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_TechLicenseCompletedEventHandler GetBasicCrewInfo_TechLicenseCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_CabinLicenseCompletedEventHandler GetBasicCrewInfo_CabinLicenseCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_CommentsCompletedEventHandler GetBasicCrewInfo_CommentsCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_LanguageSkillCompletedEventHandler GetBasicCrewInfo_LanguageSkillCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_EnglishSkillCompletedEventHandler GetBasicCrewInfo_EnglishSkillCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_BodyCheckCompletedEventHandler GetBasicCrewInfo_BodyCheckCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_VisaCompletedEventHandler GetBasicCrewInfo_VisaCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_YellowCompletedEventHandler GetBasicCrewInfo_YellowCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_HTRNPASSCompletedEventHandler GetBasicCrewInfo_HTRNPASSCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_LessonCompletedEventHandler GetBasicCrewInfo_LessonCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_TrainCabinCompletedEventHandler GetBasicCrewInfo_TrainCabinCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_Annoucement_OralCompletedEventHandler GetBasicCrewInfo_Annoucement_OralCompleted;
        
        /// <remarks/>
        public event GetCrewBasicInfo_ICAOLevelDetailsCompletedEventHandler GetCrewBasicInfo_ICAOLevelDetailsCompleted;
        
        /// <remarks/>
        public event GetCrewBasicInfo_RosterAuditLogCompletedEventHandler GetCrewBasicInfo_RosterAuditLogCompleted;
        
        /// <remarks/>
        public event GetSkillParamCompletedEventHandler GetSkillParamCompleted;
        
        /// <remarks/>
        public event GetRankParameterCompletedEventHandler GetRankParameterCompleted;
        
        /// <remarks/>
        public event GetCrewRankCompletedEventHandler GetCrewRankCompleted;
        
        /// <remarks/>
        public event GetBasicCrewInfo_ByTechAllSkillCompletedEventHandler GetBasicCrewInfo_ByTechAllSkillCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCRD", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCRD(string strStaffID, string strCRDTyp, string strStart, string strEnd) {
            object[] results = this.Invoke("GetCRD", new object[] {
                        strStaffID,
                        strCRDTyp,
                        strStart,
                        strEnd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCRDAsync(string strStaffID, string strCRDTyp, string strStart, string strEnd) {
            this.GetCRDAsync(strStaffID, strCRDTyp, strStart, strEnd, null);
        }
        
        /// <remarks/>
        public void GetCRDAsync(string strStaffID, string strCRDTyp, string strStart, string strEnd, object userState) {
            if ((this.GetCRDOperationCompleted == null)) {
                this.GetCRDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCRDOperationCompleted);
            }
            this.InvokeAsync("GetCRD", new object[] {
                        strStaffID,
                        strCRDTyp,
                        strStart,
                        strEnd}, this.GetCRDOperationCompleted, userState);
        }
        
        private void OnGetCRDOperationCompleted(object arg) {
            if ((this.GetCRDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCRDCompleted(this, new GetCRDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewInfo", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewInfo(string strStaffID) {
            object[] results = this.Invoke("GetCrewInfo", new object[] {
                        strStaffID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewInfoAsync(string strStaffID) {
            this.GetCrewInfoAsync(strStaffID, null);
        }
        
        /// <remarks/>
        public void GetCrewInfoAsync(string strStaffID, object userState) {
            if ((this.GetCrewInfoOperationCompleted == null)) {
                this.GetCrewInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewInfoOperationCompleted);
            }
            this.InvokeAsync("GetCrewInfo", new object[] {
                        strStaffID}, this.GetCrewInfoOperationCompleted, userState);
        }
        
        private void OnGetCrewInfoOperationCompleted(object arg) {
            if ((this.GetCrewInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewInfoCompleted(this, new GetCrewInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewRecords", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewRecords(string strStaffNm, string strTeam) {
            object[] results = this.Invoke("GetCrewRecords", new object[] {
                        strStaffNm,
                        strTeam});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewRecordsAsync(string strStaffNm, string strTeam) {
            this.GetCrewRecordsAsync(strStaffNm, strTeam, null);
        }
        
        /// <remarks/>
        public void GetCrewRecordsAsync(string strStaffNm, string strTeam, object userState) {
            if ((this.GetCrewRecordsOperationCompleted == null)) {
                this.GetCrewRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewRecordsOperationCompleted);
            }
            this.InvokeAsync("GetCrewRecords", new object[] {
                        strStaffNm,
                        strTeam}, this.GetCrewRecordsOperationCompleted, userState);
        }
        
        private void OnGetCrewRecordsOperationCompleted(object arg) {
            if ((this.GetCrewRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewRecordsCompleted(this, new GetCrewRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewInformation", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewInformation(string strStaffID, string strName, string strLoginId, string strCompany, string strTeam, string strCrewType, string strFLTCD) {
            object[] results = this.Invoke("GetCrewInformation", new object[] {
                        strStaffID,
                        strName,
                        strLoginId,
                        strCompany,
                        strTeam,
                        strCrewType,
                        strFLTCD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewInformationAsync(string strStaffID, string strName, string strLoginId, string strCompany, string strTeam, string strCrewType, string strFLTCD) {
            this.GetCrewInformationAsync(strStaffID, strName, strLoginId, strCompany, strTeam, strCrewType, strFLTCD, null);
        }
        
        /// <remarks/>
        public void GetCrewInformationAsync(string strStaffID, string strName, string strLoginId, string strCompany, string strTeam, string strCrewType, string strFLTCD, object userState) {
            if ((this.GetCrewInformationOperationCompleted == null)) {
                this.GetCrewInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewInformationOperationCompleted);
            }
            this.InvokeAsync("GetCrewInformation", new object[] {
                        strStaffID,
                        strName,
                        strLoginId,
                        strCompany,
                        strTeam,
                        strCrewType,
                        strFLTCD}, this.GetCrewInformationOperationCompleted, userState);
        }
        
        private void OnGetCrewInformationOperationCompleted(object arg) {
            if ((this.GetCrewInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewInformationCompleted(this, new GetCrewInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetTrainBase", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetTrainBase(string strCOMPANYCD) {
            object[] results = this.Invoke("GetTrainBase", new object[] {
                        strCOMPANYCD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetTrainBaseAsync(string strCOMPANYCD) {
            this.GetTrainBaseAsync(strCOMPANYCD, null);
        }
        
        /// <remarks/>
        public void GetTrainBaseAsync(string strCOMPANYCD, object userState) {
            if ((this.GetTrainBaseOperationCompleted == null)) {
                this.GetTrainBaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTrainBaseOperationCompleted);
            }
            this.InvokeAsync("GetTrainBase", new object[] {
                        strCOMPANYCD}, this.GetTrainBaseOperationCompleted, userState);
        }
        
        private void OnGetTrainBaseOperationCompleted(object arg) {
            if ((this.GetTrainBaseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTrainBaseCompleted(this, new GetTrainBaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetFleetInfo_SkillCat9", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFleetInfo_SkillCat9(string strCrewType, string strACGCD) {
            object[] results = this.Invoke("GetFleetInfo_SkillCat9", new object[] {
                        strCrewType,
                        strACGCD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetInfo_SkillCat9Async(string strCrewType, string strACGCD) {
            this.GetFleetInfo_SkillCat9Async(strCrewType, strACGCD, null);
        }
        
        /// <remarks/>
        public void GetFleetInfo_SkillCat9Async(string strCrewType, string strACGCD, object userState) {
            if ((this.GetFleetInfo_SkillCat9OperationCompleted == null)) {
                this.GetFleetInfo_SkillCat9OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetInfo_SkillCat9OperationCompleted);
            }
            this.InvokeAsync("GetFleetInfo_SkillCat9", new object[] {
                        strCrewType,
                        strACGCD}, this.GetFleetInfo_SkillCat9OperationCompleted, userState);
        }
        
        private void OnGetFleetInfo_SkillCat9OperationCompleted(object arg) {
            if ((this.GetFleetInfo_SkillCat9Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetInfo_SkillCat9Completed(this, new GetFleetInfo_SkillCat9CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetFleetInfo_SkillCat8", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFleetInfo_SkillCat8(string strACGID) {
            object[] results = this.Invoke("GetFleetInfo_SkillCat8", new object[] {
                        strACGID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFleetInfo_SkillCat8Async(string strACGID) {
            this.GetFleetInfo_SkillCat8Async(strACGID, null);
        }
        
        /// <remarks/>
        public void GetFleetInfo_SkillCat8Async(string strACGID, object userState) {
            if ((this.GetFleetInfo_SkillCat8OperationCompleted == null)) {
                this.GetFleetInfo_SkillCat8OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFleetInfo_SkillCat8OperationCompleted);
            }
            this.InvokeAsync("GetFleetInfo_SkillCat8", new object[] {
                        strACGID}, this.GetFleetInfo_SkillCat8OperationCompleted, userState);
        }
        
        private void OnGetFleetInfo_SkillCat8OperationCompleted(object arg) {
            if ((this.GetFleetInfo_SkillCat8Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFleetInfo_SkillCat8Completed(this, new GetFleetInfo_SkillCat8CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetICAO_Qualifier", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetICAO_Qualifier(string strCrewName, string strCompID, string strTeamID, string strFleetID) {
            object[] results = this.Invoke("GetICAO_Qualifier", new object[] {
                        strCrewName,
                        strCompID,
                        strTeamID,
                        strFleetID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetICAO_QualifierAsync(string strCrewName, string strCompID, string strTeamID, string strFleetID) {
            this.GetICAO_QualifierAsync(strCrewName, strCompID, strTeamID, strFleetID, null);
        }
        
        /// <remarks/>
        public void GetICAO_QualifierAsync(string strCrewName, string strCompID, string strTeamID, string strFleetID, object userState) {
            if ((this.GetICAO_QualifierOperationCompleted == null)) {
                this.GetICAO_QualifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetICAO_QualifierOperationCompleted);
            }
            this.InvokeAsync("GetICAO_Qualifier", new object[] {
                        strCrewName,
                        strCompID,
                        strTeamID,
                        strFleetID}, this.GetICAO_QualifierOperationCompleted, userState);
        }
        
        private void OnGetICAO_QualifierOperationCompleted(object arg) {
            if ((this.GetICAO_QualifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetICAO_QualifierCompleted(this, new GetICAO_QualifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_ByLicenseType", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_ByLicenseType(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD) {
            object[] results = this.Invoke("GetBasicCrewInfo_ByLicenseType", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrewCat,
                        strCompID,
                        strTeamCD,
                        strFleetCD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ByLicenseTypeAsync(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD) {
            this.GetBasicCrewInfo_ByLicenseTypeAsync(strCrewName, strStaffID, strLoginId, strCrewCat, strCompID, strTeamCD, strFleetCD, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ByLicenseTypeAsync(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD, object userState) {
            if ((this.GetBasicCrewInfo_ByLicenseTypeOperationCompleted == null)) {
                this.GetBasicCrewInfo_ByLicenseTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_ByLicenseTypeOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_ByLicenseType", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrewCat,
                        strCompID,
                        strTeamCD,
                        strFleetCD}, this.GetBasicCrewInfo_ByLicenseTypeOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_ByLicenseTypeOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_ByLicenseTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_ByLicenseTypeCompleted(this, new GetBasicCrewInfo_ByLicenseTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_ByTechSkillInfo", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_ByTechSkillInfo(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify) {
            object[] results = this.Invoke("GetBasicCrewInfo_ByTechSkillInfo", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrewCat,
                        strCompID,
                        strTeamCD,
                        strFleetCD,
                        strValid,
                        dtStartModify,
                        dtEndModify});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ByTechSkillInfoAsync(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify) {
            this.GetBasicCrewInfo_ByTechSkillInfoAsync(strCrewName, strStaffID, strLoginId, strCrewCat, strCompID, strTeamCD, strFleetCD, strValid, dtStartModify, dtEndModify, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ByTechSkillInfoAsync(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify, object userState) {
            if ((this.GetBasicCrewInfo_ByTechSkillInfoOperationCompleted == null)) {
                this.GetBasicCrewInfo_ByTechSkillInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_ByTechSkillInfoOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_ByTechSkillInfo", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrewCat,
                        strCompID,
                        strTeamCD,
                        strFleetCD,
                        strValid,
                        dtStartModify,
                        dtEndModify}, this.GetBasicCrewInfo_ByTechSkillInfoOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_ByTechSkillInfoOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_ByTechSkillInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_ByTechSkillInfoCompleted(this, new GetBasicCrewInfo_ByTechSkillInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_BySkillCat", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_BySkillCat(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify) {
            object[] results = this.Invoke("GetBasicCrewInfo_BySkillCat", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrewCat,
                        strCompID,
                        strTeamCD,
                        strFleetCD,
                        strValid,
                        dtStartModify,
                        dtEndModify});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_BySkillCatAsync(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify) {
            this.GetBasicCrewInfo_BySkillCatAsync(strCrewName, strStaffID, strLoginId, strCrewCat, strCompID, strTeamCD, strFleetCD, strValid, dtStartModify, dtEndModify, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_BySkillCatAsync(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify, object userState) {
            if ((this.GetBasicCrewInfo_BySkillCatOperationCompleted == null)) {
                this.GetBasicCrewInfo_BySkillCatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_BySkillCatOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_BySkillCat", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrewCat,
                        strCompID,
                        strTeamCD,
                        strFleetCD,
                        strValid,
                        dtStartModify,
                        dtEndModify}, this.GetBasicCrewInfo_BySkillCatOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_BySkillCatOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_BySkillCatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_BySkillCatCompleted(this, new GetBasicCrewInfo_BySkillCatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_ByInternationSkill", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_ByInternationSkill(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD) {
            object[] results = this.Invoke("GetBasicCrewInfo_ByInternationSkill", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrewCat,
                        strCompID,
                        strTeamCD,
                        strFleetCD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ByInternationSkillAsync(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD) {
            this.GetBasicCrewInfo_ByInternationSkillAsync(strCrewName, strStaffID, strLoginId, strCrewCat, strCompID, strTeamCD, strFleetCD, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ByInternationSkillAsync(string strCrewName, string strStaffID, string strLoginId, string strCrewCat, string strCompID, string strTeamCD, string strFleetCD, object userState) {
            if ((this.GetBasicCrewInfo_ByInternationSkillOperationCompleted == null)) {
                this.GetBasicCrewInfo_ByInternationSkillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_ByInternationSkillOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_ByInternationSkill", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrewCat,
                        strCompID,
                        strTeamCD,
                        strFleetCD}, this.GetBasicCrewInfo_ByInternationSkillOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_ByInternationSkillOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_ByInternationSkillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_ByInternationSkillCompleted(this, new GetBasicCrewInfo_ByInternationSkillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_FlyingHours", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_FlyingHours(string strName, string strStaffID, string strLoginId, string strCrwTyp, string strCompID, string strAcgid, string strStartdate, string strEndDate) {
            object[] results = this.Invoke("GetBasicCrewInfo_FlyingHours", new object[] {
                        strName,
                        strStaffID,
                        strLoginId,
                        strCrwTyp,
                        strCompID,
                        strAcgid,
                        strStartdate,
                        strEndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_FlyingHoursAsync(string strName, string strStaffID, string strLoginId, string strCrwTyp, string strCompID, string strAcgid, string strStartdate, string strEndDate) {
            this.GetBasicCrewInfo_FlyingHoursAsync(strName, strStaffID, strLoginId, strCrwTyp, strCompID, strAcgid, strStartdate, strEndDate, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_FlyingHoursAsync(string strName, string strStaffID, string strLoginId, string strCrwTyp, string strCompID, string strAcgid, string strStartdate, string strEndDate, object userState) {
            if ((this.GetBasicCrewInfo_FlyingHoursOperationCompleted == null)) {
                this.GetBasicCrewInfo_FlyingHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_FlyingHoursOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_FlyingHours", new object[] {
                        strName,
                        strStaffID,
                        strLoginId,
                        strCrwTyp,
                        strCompID,
                        strAcgid,
                        strStartdate,
                        strEndDate}, this.GetBasicCrewInfo_FlyingHoursOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_FlyingHoursOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_FlyingHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_FlyingHoursCompleted(this, new GetBasicCrewInfo_FlyingHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewBasicInfo_SyncFH", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewBasicInfo_SyncFH(string strCrewName, string strStaffID, string strLoginId, string strCrwTyp, string strCompID, string strAcgid, string dtStartModify, string dtEndModify) {
            object[] results = this.Invoke("GetCrewBasicInfo_SyncFH", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrwTyp,
                        strCompID,
                        strAcgid,
                        dtStartModify,
                        dtEndModify});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_SyncFHAsync(string strCrewName, string strStaffID, string strLoginId, string strCrwTyp, string strCompID, string strAcgid, string dtStartModify, string dtEndModify) {
            this.GetCrewBasicInfo_SyncFHAsync(strCrewName, strStaffID, strLoginId, strCrwTyp, strCompID, strAcgid, dtStartModify, dtEndModify, null);
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_SyncFHAsync(string strCrewName, string strStaffID, string strLoginId, string strCrwTyp, string strCompID, string strAcgid, string dtStartModify, string dtEndModify, object userState) {
            if ((this.GetCrewBasicInfo_SyncFHOperationCompleted == null)) {
                this.GetCrewBasicInfo_SyncFHOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewBasicInfo_SyncFHOperationCompleted);
            }
            this.InvokeAsync("GetCrewBasicInfo_SyncFH", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCrwTyp,
                        strCompID,
                        strAcgid,
                        dtStartModify,
                        dtEndModify}, this.GetCrewBasicInfo_SyncFHOperationCompleted, userState);
        }
        
        private void OnGetCrewBasicInfo_SyncFHOperationCompleted(object arg) {
            if ((this.GetCrewBasicInfo_SyncFHCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewBasicInfo_SyncFHCompleted(this, new GetCrewBasicInfo_SyncFHCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewBasicInfo_QARHours", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewBasicInfo_QARHours(string strCrewName, string strStaffID, string strCrwTyp, string strCompID, string strAcgid, string strStartdate, string strEndDate) {
            object[] results = this.Invoke("GetCrewBasicInfo_QARHours", new object[] {
                        strCrewName,
                        strStaffID,
                        strCrwTyp,
                        strCompID,
                        strAcgid,
                        strStartdate,
                        strEndDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_QARHoursAsync(string strCrewName, string strStaffID, string strCrwTyp, string strCompID, string strAcgid, string strStartdate, string strEndDate) {
            this.GetCrewBasicInfo_QARHoursAsync(strCrewName, strStaffID, strCrwTyp, strCompID, strAcgid, strStartdate, strEndDate, null);
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_QARHoursAsync(string strCrewName, string strStaffID, string strCrwTyp, string strCompID, string strAcgid, string strStartdate, string strEndDate, object userState) {
            if ((this.GetCrewBasicInfo_QARHoursOperationCompleted == null)) {
                this.GetCrewBasicInfo_QARHoursOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewBasicInfo_QARHoursOperationCompleted);
            }
            this.InvokeAsync("GetCrewBasicInfo_QARHours", new object[] {
                        strCrewName,
                        strStaffID,
                        strCrwTyp,
                        strCompID,
                        strAcgid,
                        strStartdate,
                        strEndDate}, this.GetCrewBasicInfo_QARHoursOperationCompleted, userState);
        }
        
        private void OnGetCrewBasicInfo_QARHoursOperationCompleted(object arg) {
            if ((this.GetCrewBasicInfo_QARHoursCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewBasicInfo_QARHoursCompleted(this, new GetCrewBasicInfo_QARHoursCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewBasicInfo_LeavesTrans", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewBasicInfo_LeavesTrans(string strStaffID, string strCrewName, string strLoginID, string intCrewType, string dtStartModify, string dtEndModify, string intCompanyID, string dtLeaveStart, string dtLeaveEnd) {
            object[] results = this.Invoke("GetCrewBasicInfo_LeavesTrans", new object[] {
                        strStaffID,
                        strCrewName,
                        strLoginID,
                        intCrewType,
                        dtStartModify,
                        dtEndModify,
                        intCompanyID,
                        dtLeaveStart,
                        dtLeaveEnd});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_LeavesTransAsync(string strStaffID, string strCrewName, string strLoginID, string intCrewType, string dtStartModify, string dtEndModify, string intCompanyID, string dtLeaveStart, string dtLeaveEnd) {
            this.GetCrewBasicInfo_LeavesTransAsync(strStaffID, strCrewName, strLoginID, intCrewType, dtStartModify, dtEndModify, intCompanyID, dtLeaveStart, dtLeaveEnd, null);
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_LeavesTransAsync(string strStaffID, string strCrewName, string strLoginID, string intCrewType, string dtStartModify, string dtEndModify, string intCompanyID, string dtLeaveStart, string dtLeaveEnd, object userState) {
            if ((this.GetCrewBasicInfo_LeavesTransOperationCompleted == null)) {
                this.GetCrewBasicInfo_LeavesTransOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewBasicInfo_LeavesTransOperationCompleted);
            }
            this.InvokeAsync("GetCrewBasicInfo_LeavesTrans", new object[] {
                        strStaffID,
                        strCrewName,
                        strLoginID,
                        intCrewType,
                        dtStartModify,
                        dtEndModify,
                        intCompanyID,
                        dtLeaveStart,
                        dtLeaveEnd}, this.GetCrewBasicInfo_LeavesTransOperationCompleted, userState);
        }
        
        private void OnGetCrewBasicInfo_LeavesTransOperationCompleted(object arg) {
            if ((this.GetCrewBasicInfo_LeavesTransCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewBasicInfo_LeavesTransCompleted(this, new GetCrewBasicInfo_LeavesTransCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetParam", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetParam() {
            object[] results = this.Invoke("GetParam", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetParamAsync() {
            this.GetParamAsync(null);
        }
        
        /// <remarks/>
        public void GetParamAsync(object userState) {
            if ((this.GetParamOperationCompleted == null)) {
                this.GetParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParamOperationCompleted);
            }
            this.InvokeAsync("GetParam", new object[0], this.GetParamOperationCompleted, userState);
        }
        
        private void OnGetParamOperationCompleted(object arg) {
            if ((this.GetParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetParamCompleted(this, new GetParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_Profile", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_Profile(string strName, string strStaffID, string strLoginId, string dtStartModify, string dtEndModify) {
            object[] results = this.Invoke("GetBasicCrewInfo_Profile", new object[] {
                        strName,
                        strStaffID,
                        strLoginId,
                        dtStartModify,
                        dtEndModify});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ProfileAsync(string strName, string strStaffID, string strLoginId, string dtStartModify, string dtEndModify) {
            this.GetBasicCrewInfo_ProfileAsync(strName, strStaffID, strLoginId, dtStartModify, dtEndModify, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ProfileAsync(string strName, string strStaffID, string strLoginId, string dtStartModify, string dtEndModify, object userState) {
            if ((this.GetBasicCrewInfo_ProfileOperationCompleted == null)) {
                this.GetBasicCrewInfo_ProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_ProfileOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_Profile", new object[] {
                        strName,
                        strStaffID,
                        strLoginId,
                        dtStartModify,
                        dtEndModify}, this.GetBasicCrewInfo_ProfileOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_ProfileOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_ProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_ProfileCompleted(this, new GetBasicCrewInfo_ProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_Promotion", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_Promotion(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_Promotion", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_PromotionAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_PromotionAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_PromotionAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_PromotionOperationCompleted == null)) {
                this.GetBasicCrewInfo_PromotionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_PromotionOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_Promotion", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_PromotionOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_PromotionOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_PromotionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_PromotionCompleted(this, new GetBasicCrewInfo_PromotionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_TechLicense", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_TechLicense(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_TechLicense", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_TechLicenseAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_TechLicenseAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_TechLicenseAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_TechLicenseOperationCompleted == null)) {
                this.GetBasicCrewInfo_TechLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_TechLicenseOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_TechLicense", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_TechLicenseOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_TechLicenseOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_TechLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_TechLicenseCompleted(this, new GetBasicCrewInfo_TechLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_CabinLicense", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_CabinLicense(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_CabinLicense", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_CabinLicenseAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_CabinLicenseAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_CabinLicenseAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_CabinLicenseOperationCompleted == null)) {
                this.GetBasicCrewInfo_CabinLicenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_CabinLicenseOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_CabinLicense", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_CabinLicenseOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_CabinLicenseOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_CabinLicenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_CabinLicenseCompleted(this, new GetBasicCrewInfo_CabinLicenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_Comments", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_Comments(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_Comments", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_CommentsAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_CommentsAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_CommentsAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_CommentsOperationCompleted == null)) {
                this.GetBasicCrewInfo_CommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_CommentsOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_Comments", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_CommentsOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_CommentsOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_CommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_CommentsCompleted(this, new GetBasicCrewInfo_CommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_LanguageSkill", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_LanguageSkill(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_LanguageSkill", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_LanguageSkillAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_LanguageSkillAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_LanguageSkillAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_LanguageSkillOperationCompleted == null)) {
                this.GetBasicCrewInfo_LanguageSkillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_LanguageSkillOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_LanguageSkill", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_LanguageSkillOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_LanguageSkillOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_LanguageSkillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_LanguageSkillCompleted(this, new GetBasicCrewInfo_LanguageSkillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_EnglishSkill", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_EnglishSkill(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_EnglishSkill", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_EnglishSkillAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_EnglishSkillAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_EnglishSkillAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_EnglishSkillOperationCompleted == null)) {
                this.GetBasicCrewInfo_EnglishSkillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_EnglishSkillOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_EnglishSkill", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_EnglishSkillOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_EnglishSkillOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_EnglishSkillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_EnglishSkillCompleted(this, new GetBasicCrewInfo_EnglishSkillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_BodyCheck", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_BodyCheck(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_BodyCheck", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_BodyCheckAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_BodyCheckAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_BodyCheckAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_BodyCheckOperationCompleted == null)) {
                this.GetBasicCrewInfo_BodyCheckOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_BodyCheckOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_BodyCheck", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_BodyCheckOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_BodyCheckOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_BodyCheckCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_BodyCheckCompleted(this, new GetBasicCrewInfo_BodyCheckCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_Visa", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_Visa(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_Visa", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_VisaAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_VisaAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_VisaAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_VisaOperationCompleted == null)) {
                this.GetBasicCrewInfo_VisaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_VisaOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_Visa", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_VisaOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_VisaOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_VisaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_VisaCompleted(this, new GetBasicCrewInfo_VisaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_Yellow", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_Yellow(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_Yellow", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_YellowAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_YellowAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_YellowAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_YellowOperationCompleted == null)) {
                this.GetBasicCrewInfo_YellowOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_YellowOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_Yellow", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_YellowOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_YellowOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_YellowCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_YellowCompleted(this, new GetBasicCrewInfo_YellowCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_HTRNPASS", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_HTRNPASS(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_HTRNPASS", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_HTRNPASSAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_HTRNPASSAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_HTRNPASSAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_HTRNPASSOperationCompleted == null)) {
                this.GetBasicCrewInfo_HTRNPASSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_HTRNPASSOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_HTRNPASS", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_HTRNPASSOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_HTRNPASSOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_HTRNPASSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_HTRNPASSCompleted(this, new GetBasicCrewInfo_HTRNPASSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_Lesson", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_Lesson(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_Lesson", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_LessonAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_LessonAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_LessonAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_LessonOperationCompleted == null)) {
                this.GetBasicCrewInfo_LessonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_LessonOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_Lesson", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_LessonOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_LessonOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_LessonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_LessonCompleted(this, new GetBasicCrewInfo_LessonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_TrainCabin", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_TrainCabin(string strName, string strStaffID, string strLoginId) {
            object[] results = this.Invoke("GetBasicCrewInfo_TrainCabin", new object[] {
                        strName,
                        strStaffID,
                        strLoginId});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_TrainCabinAsync(string strName, string strStaffID, string strLoginId) {
            this.GetBasicCrewInfo_TrainCabinAsync(strName, strStaffID, strLoginId, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_TrainCabinAsync(string strName, string strStaffID, string strLoginId, object userState) {
            if ((this.GetBasicCrewInfo_TrainCabinOperationCompleted == null)) {
                this.GetBasicCrewInfo_TrainCabinOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_TrainCabinOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_TrainCabin", new object[] {
                        strName,
                        strStaffID,
                        strLoginId}, this.GetBasicCrewInfo_TrainCabinOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_TrainCabinOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_TrainCabinCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_TrainCabinCompleted(this, new GetBasicCrewInfo_TrainCabinCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_Annoucement_Oral", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_Annoucement_Oral(string strCompanyName, string strName, string strStaffID, string strLoginId, string dtGainDate) {
            object[] results = this.Invoke("GetBasicCrewInfo_Annoucement_Oral", new object[] {
                        strCompanyName,
                        strName,
                        strStaffID,
                        strLoginId,
                        dtGainDate});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_Annoucement_OralAsync(string strCompanyName, string strName, string strStaffID, string strLoginId, string dtGainDate) {
            this.GetBasicCrewInfo_Annoucement_OralAsync(strCompanyName, strName, strStaffID, strLoginId, dtGainDate, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_Annoucement_OralAsync(string strCompanyName, string strName, string strStaffID, string strLoginId, string dtGainDate, object userState) {
            if ((this.GetBasicCrewInfo_Annoucement_OralOperationCompleted == null)) {
                this.GetBasicCrewInfo_Annoucement_OralOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_Annoucement_OralOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_Annoucement_Oral", new object[] {
                        strCompanyName,
                        strName,
                        strStaffID,
                        strLoginId,
                        dtGainDate}, this.GetBasicCrewInfo_Annoucement_OralOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_Annoucement_OralOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_Annoucement_OralCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_Annoucement_OralCompleted(this, new GetBasicCrewInfo_Annoucement_OralCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewBasicInfo_ICAOLevelDetails", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewBasicInfo_ICAOLevelDetails(string strStaffID, string strCrewName, string strLoginID, string dtStartModify, string dtEndModify) {
            object[] results = this.Invoke("GetCrewBasicInfo_ICAOLevelDetails", new object[] {
                        strStaffID,
                        strCrewName,
                        strLoginID,
                        dtStartModify,
                        dtEndModify});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_ICAOLevelDetailsAsync(string strStaffID, string strCrewName, string strLoginID, string dtStartModify, string dtEndModify) {
            this.GetCrewBasicInfo_ICAOLevelDetailsAsync(strStaffID, strCrewName, strLoginID, dtStartModify, dtEndModify, null);
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_ICAOLevelDetailsAsync(string strStaffID, string strCrewName, string strLoginID, string dtStartModify, string dtEndModify, object userState) {
            if ((this.GetCrewBasicInfo_ICAOLevelDetailsOperationCompleted == null)) {
                this.GetCrewBasicInfo_ICAOLevelDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewBasicInfo_ICAOLevelDetailsOperationCompleted);
            }
            this.InvokeAsync("GetCrewBasicInfo_ICAOLevelDetails", new object[] {
                        strStaffID,
                        strCrewName,
                        strLoginID,
                        dtStartModify,
                        dtEndModify}, this.GetCrewBasicInfo_ICAOLevelDetailsOperationCompleted, userState);
        }
        
        private void OnGetCrewBasicInfo_ICAOLevelDetailsOperationCompleted(object arg) {
            if ((this.GetCrewBasicInfo_ICAOLevelDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewBasicInfo_ICAOLevelDetailsCompleted(this, new GetCrewBasicInfo_ICAOLevelDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewBasicInfo_RosterAuditLog", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewBasicInfo_RosterAuditLog(string strStaffID, string strCrewName, string strLoginID, string intCrewType, string strFlightNo, string dtDutyDate, string dtStartModify, string dtEndModify) {
            object[] results = this.Invoke("GetCrewBasicInfo_RosterAuditLog", new object[] {
                        strStaffID,
                        strCrewName,
                        strLoginID,
                        intCrewType,
                        strFlightNo,
                        dtDutyDate,
                        dtStartModify,
                        dtEndModify});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_RosterAuditLogAsync(string strStaffID, string strCrewName, string strLoginID, string intCrewType, string strFlightNo, string dtDutyDate, string dtStartModify, string dtEndModify) {
            this.GetCrewBasicInfo_RosterAuditLogAsync(strStaffID, strCrewName, strLoginID, intCrewType, strFlightNo, dtDutyDate, dtStartModify, dtEndModify, null);
        }
        
        /// <remarks/>
        public void GetCrewBasicInfo_RosterAuditLogAsync(string strStaffID, string strCrewName, string strLoginID, string intCrewType, string strFlightNo, string dtDutyDate, string dtStartModify, string dtEndModify, object userState) {
            if ((this.GetCrewBasicInfo_RosterAuditLogOperationCompleted == null)) {
                this.GetCrewBasicInfo_RosterAuditLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewBasicInfo_RosterAuditLogOperationCompleted);
            }
            this.InvokeAsync("GetCrewBasicInfo_RosterAuditLog", new object[] {
                        strStaffID,
                        strCrewName,
                        strLoginID,
                        intCrewType,
                        strFlightNo,
                        dtDutyDate,
                        dtStartModify,
                        dtEndModify}, this.GetCrewBasicInfo_RosterAuditLogOperationCompleted, userState);
        }
        
        private void OnGetCrewBasicInfo_RosterAuditLogOperationCompleted(object arg) {
            if ((this.GetCrewBasicInfo_RosterAuditLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewBasicInfo_RosterAuditLogCompleted(this, new GetCrewBasicInfo_RosterAuditLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetSkillParam", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSkillParam(string strCrewType, string strACGCD) {
            object[] results = this.Invoke("GetSkillParam", new object[] {
                        strCrewType,
                        strACGCD});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSkillParamAsync(string strCrewType, string strACGCD) {
            this.GetSkillParamAsync(strCrewType, strACGCD, null);
        }
        
        /// <remarks/>
        public void GetSkillParamAsync(string strCrewType, string strACGCD, object userState) {
            if ((this.GetSkillParamOperationCompleted == null)) {
                this.GetSkillParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSkillParamOperationCompleted);
            }
            this.InvokeAsync("GetSkillParam", new object[] {
                        strCrewType,
                        strACGCD}, this.GetSkillParamOperationCompleted, userState);
        }
        
        private void OnGetSkillParamOperationCompleted(object arg) {
            if ((this.GetSkillParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSkillParamCompleted(this, new GetSkillParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetRankParameter", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRankParameter(string strCrewType) {
            object[] results = this.Invoke("GetRankParameter", new object[] {
                        strCrewType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRankParameterAsync(string strCrewType) {
            this.GetRankParameterAsync(strCrewType, null);
        }
        
        /// <remarks/>
        public void GetRankParameterAsync(string strCrewType, object userState) {
            if ((this.GetRankParameterOperationCompleted == null)) {
                this.GetRankParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRankParameterOperationCompleted);
            }
            this.InvokeAsync("GetRankParameter", new object[] {
                        strCrewType}, this.GetRankParameterOperationCompleted, userState);
        }
        
        private void OnGetRankParameterOperationCompleted(object arg) {
            if ((this.GetRankParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRankParameterCompleted(this, new GetRankParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetCrewRank", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCrewRank(string strCrewTypeID, string strStaffID, string strStaffName, string strEffectiveDate, string strExpiryDate, string strTeamID, string strRankID, string strAcgGroupID, string strStatus, string strComID, string strSkillCatID) {
            object[] results = this.Invoke("GetCrewRank", new object[] {
                        strCrewTypeID,
                        strStaffID,
                        strStaffName,
                        strEffectiveDate,
                        strExpiryDate,
                        strTeamID,
                        strRankID,
                        strAcgGroupID,
                        strStatus,
                        strComID,
                        strSkillCatID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCrewRankAsync(string strCrewTypeID, string strStaffID, string strStaffName, string strEffectiveDate, string strExpiryDate, string strTeamID, string strRankID, string strAcgGroupID, string strStatus, string strComID, string strSkillCatID) {
            this.GetCrewRankAsync(strCrewTypeID, strStaffID, strStaffName, strEffectiveDate, strExpiryDate, strTeamID, strRankID, strAcgGroupID, strStatus, strComID, strSkillCatID, null);
        }
        
        /// <remarks/>
        public void GetCrewRankAsync(string strCrewTypeID, string strStaffID, string strStaffName, string strEffectiveDate, string strExpiryDate, string strTeamID, string strRankID, string strAcgGroupID, string strStatus, string strComID, string strSkillCatID, object userState) {
            if ((this.GetCrewRankOperationCompleted == null)) {
                this.GetCrewRankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCrewRankOperationCompleted);
            }
            this.InvokeAsync("GetCrewRank", new object[] {
                        strCrewTypeID,
                        strStaffID,
                        strStaffName,
                        strEffectiveDate,
                        strExpiryDate,
                        strTeamID,
                        strRankID,
                        strAcgGroupID,
                        strStatus,
                        strComID,
                        strSkillCatID}, this.GetCrewRankOperationCompleted, userState);
        }
        
        private void OnGetCrewRankOperationCompleted(object arg) {
            if ((this.GetCrewRankCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCrewRankCompleted(this, new GetCrewRankCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.hnair.com/GetBasicCrewInfo_ByTechAllSkill", RequestNamespace="http://www.hnair.com/", ResponseNamespace="http://www.hnair.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBasicCrewInfo_ByTechAllSkill(string strCrewName, string strStaffID, string strLoginId, string strCompID, string strSkillCat, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify) {
            object[] results = this.Invoke("GetBasicCrewInfo_ByTechAllSkill", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCompID,
                        strSkillCat,
                        strTeamCD,
                        strFleetCD,
                        strValid,
                        dtStartModify,
                        dtEndModify});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ByTechAllSkillAsync(string strCrewName, string strStaffID, string strLoginId, string strCompID, string strSkillCat, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify) {
            this.GetBasicCrewInfo_ByTechAllSkillAsync(strCrewName, strStaffID, strLoginId, strCompID, strSkillCat, strTeamCD, strFleetCD, strValid, dtStartModify, dtEndModify, null);
        }
        
        /// <remarks/>
        public void GetBasicCrewInfo_ByTechAllSkillAsync(string strCrewName, string strStaffID, string strLoginId, string strCompID, string strSkillCat, string strTeamCD, string strFleetCD, string strValid, string dtStartModify, string dtEndModify, object userState) {
            if ((this.GetBasicCrewInfo_ByTechAllSkillOperationCompleted == null)) {
                this.GetBasicCrewInfo_ByTechAllSkillOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicCrewInfo_ByTechAllSkillOperationCompleted);
            }
            this.InvokeAsync("GetBasicCrewInfo_ByTechAllSkill", new object[] {
                        strCrewName,
                        strStaffID,
                        strLoginId,
                        strCompID,
                        strSkillCat,
                        strTeamCD,
                        strFleetCD,
                        strValid,
                        dtStartModify,
                        dtEndModify}, this.GetBasicCrewInfo_ByTechAllSkillOperationCompleted, userState);
        }
        
        private void OnGetBasicCrewInfo_ByTechAllSkillOperationCompleted(object arg) {
            if ((this.GetBasicCrewInfo_ByTechAllSkillCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicCrewInfo_ByTechAllSkillCompleted(this, new GetBasicCrewInfo_ByTechAllSkillCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCRDCompletedEventHandler(object sender, GetCRDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCRDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCRDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewInfoCompletedEventHandler(object sender, GetCrewInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewRecordsCompletedEventHandler(object sender, GetCrewRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewInformationCompletedEventHandler(object sender, GetCrewInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetTrainBaseCompletedEventHandler(object sender, GetTrainBaseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTrainBaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTrainBaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFleetInfo_SkillCat9CompletedEventHandler(object sender, GetFleetInfo_SkillCat9CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetInfo_SkillCat9CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetInfo_SkillCat9CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetFleetInfo_SkillCat8CompletedEventHandler(object sender, GetFleetInfo_SkillCat8CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFleetInfo_SkillCat8CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFleetInfo_SkillCat8CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetICAO_QualifierCompletedEventHandler(object sender, GetICAO_QualifierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetICAO_QualifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetICAO_QualifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_ByLicenseTypeCompletedEventHandler(object sender, GetBasicCrewInfo_ByLicenseTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_ByLicenseTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_ByLicenseTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_ByTechSkillInfoCompletedEventHandler(object sender, GetBasicCrewInfo_ByTechSkillInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_ByTechSkillInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_ByTechSkillInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_BySkillCatCompletedEventHandler(object sender, GetBasicCrewInfo_BySkillCatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_BySkillCatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_BySkillCatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_ByInternationSkillCompletedEventHandler(object sender, GetBasicCrewInfo_ByInternationSkillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_ByInternationSkillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_ByInternationSkillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_FlyingHoursCompletedEventHandler(object sender, GetBasicCrewInfo_FlyingHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_FlyingHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_FlyingHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewBasicInfo_SyncFHCompletedEventHandler(object sender, GetCrewBasicInfo_SyncFHCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewBasicInfo_SyncFHCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewBasicInfo_SyncFHCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewBasicInfo_QARHoursCompletedEventHandler(object sender, GetCrewBasicInfo_QARHoursCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewBasicInfo_QARHoursCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewBasicInfo_QARHoursCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewBasicInfo_LeavesTransCompletedEventHandler(object sender, GetCrewBasicInfo_LeavesTransCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewBasicInfo_LeavesTransCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewBasicInfo_LeavesTransCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetParamCompletedEventHandler(object sender, GetParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_ProfileCompletedEventHandler(object sender, GetBasicCrewInfo_ProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_ProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_ProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_PromotionCompletedEventHandler(object sender, GetBasicCrewInfo_PromotionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_PromotionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_PromotionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_TechLicenseCompletedEventHandler(object sender, GetBasicCrewInfo_TechLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_TechLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_TechLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_CabinLicenseCompletedEventHandler(object sender, GetBasicCrewInfo_CabinLicenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_CabinLicenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_CabinLicenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_CommentsCompletedEventHandler(object sender, GetBasicCrewInfo_CommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_CommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_CommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_LanguageSkillCompletedEventHandler(object sender, GetBasicCrewInfo_LanguageSkillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_LanguageSkillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_LanguageSkillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_EnglishSkillCompletedEventHandler(object sender, GetBasicCrewInfo_EnglishSkillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_EnglishSkillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_EnglishSkillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_BodyCheckCompletedEventHandler(object sender, GetBasicCrewInfo_BodyCheckCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_BodyCheckCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_BodyCheckCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_VisaCompletedEventHandler(object sender, GetBasicCrewInfo_VisaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_VisaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_VisaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_YellowCompletedEventHandler(object sender, GetBasicCrewInfo_YellowCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_YellowCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_YellowCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_HTRNPASSCompletedEventHandler(object sender, GetBasicCrewInfo_HTRNPASSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_HTRNPASSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_HTRNPASSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_LessonCompletedEventHandler(object sender, GetBasicCrewInfo_LessonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_LessonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_LessonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_TrainCabinCompletedEventHandler(object sender, GetBasicCrewInfo_TrainCabinCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_TrainCabinCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_TrainCabinCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_Annoucement_OralCompletedEventHandler(object sender, GetBasicCrewInfo_Annoucement_OralCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_Annoucement_OralCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_Annoucement_OralCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewBasicInfo_ICAOLevelDetailsCompletedEventHandler(object sender, GetCrewBasicInfo_ICAOLevelDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewBasicInfo_ICAOLevelDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewBasicInfo_ICAOLevelDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewBasicInfo_RosterAuditLogCompletedEventHandler(object sender, GetCrewBasicInfo_RosterAuditLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewBasicInfo_RosterAuditLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewBasicInfo_RosterAuditLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetSkillParamCompletedEventHandler(object sender, GetSkillParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSkillParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSkillParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetRankParameterCompletedEventHandler(object sender, GetRankParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRankParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRankParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetCrewRankCompletedEventHandler(object sender, GetCrewRankCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCrewRankCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCrewRankCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetBasicCrewInfo_ByTechAllSkillCompletedEventHandler(object sender, GetBasicCrewInfo_ByTechAllSkillCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicCrewInfo_ByTechAllSkillCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicCrewInfo_ByTechAllSkillCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591