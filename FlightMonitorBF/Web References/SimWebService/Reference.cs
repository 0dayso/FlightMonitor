//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3649
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3649.
// 
#pragma warning disable 1591

namespace AirSoft.FlightMonitor.FlightMonitorBF.SimWebService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServiceSoap", Namespace="http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFLTPSROperationCompleted;
        
        private System.Threading.SendOrPostCallback getFLTPSRClassOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFLTPSRSUMOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Service() {
            this.Url = global::AirSoft.FlightMonitor.FlightMonitorBF.Properties.Settings.Default.AirSoft_FlightMonitor_FlightMonitorBF_SimWebService_Service;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event getFLTPSRCompletedEventHandler getFLTPSRCompleted;
        
        /// <remarks/>
        public event getFLTPSRClassCompletedEventHandler getFLTPSRClassCompleted;
        
        /// <remarks/>
        public event getFLTPSRSUMCompletedEventHandler getFLTPSRSUMCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFLTPSR", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFLTPSR(string strFLTID, string strDATOP, string strDEP, string strARR) {
            object[] results = this.Invoke("getFLTPSR", new object[] {
                        strFLTID,
                        strDATOP,
                        strDEP,
                        strARR});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFLTPSRAsync(string strFLTID, string strDATOP, string strDEP, string strARR) {
            this.getFLTPSRAsync(strFLTID, strDATOP, strDEP, strARR, null);
        }
        
        /// <remarks/>
        public void getFLTPSRAsync(string strFLTID, string strDATOP, string strDEP, string strARR, object userState) {
            if ((this.getFLTPSROperationCompleted == null)) {
                this.getFLTPSROperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFLTPSROperationCompleted);
            }
            this.InvokeAsync("getFLTPSR", new object[] {
                        strFLTID,
                        strDATOP,
                        strDEP,
                        strARR}, this.getFLTPSROperationCompleted, userState);
        }
        
        private void OngetFLTPSROperationCompleted(object arg) {
            if ((this.getFLTPSRCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFLTPSRCompleted(this, new getFLTPSRCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFLTPSRClass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFLTPSRClass(string strFLTID, string strDATOP, string strDEP, string strARR, int strTYPE) {
            object[] results = this.Invoke("getFLTPSRClass", new object[] {
                        strFLTID,
                        strDATOP,
                        strDEP,
                        strARR,
                        strTYPE});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFLTPSRClassAsync(string strFLTID, string strDATOP, string strDEP, string strARR, int strTYPE) {
            this.getFLTPSRClassAsync(strFLTID, strDATOP, strDEP, strARR, strTYPE, null);
        }
        
        /// <remarks/>
        public void getFLTPSRClassAsync(string strFLTID, string strDATOP, string strDEP, string strARR, int strTYPE, object userState) {
            if ((this.getFLTPSRClassOperationCompleted == null)) {
                this.getFLTPSRClassOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFLTPSRClassOperationCompleted);
            }
            this.InvokeAsync("getFLTPSRClass", new object[] {
                        strFLTID,
                        strDATOP,
                        strDEP,
                        strARR,
                        strTYPE}, this.getFLTPSRClassOperationCompleted, userState);
        }
        
        private void OngetFLTPSRClassOperationCompleted(object arg) {
            if ((this.getFLTPSRClassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFLTPSRClassCompleted(this, new getFLTPSRClassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getFLTPSRSUM", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet getFLTPSRSUM(string strFLTID, string strDATOP, string strDEP, string strARR) {
            object[] results = this.Invoke("getFLTPSRSUM", new object[] {
                        strFLTID,
                        strDATOP,
                        strDEP,
                        strARR});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void getFLTPSRSUMAsync(string strFLTID, string strDATOP, string strDEP, string strARR) {
            this.getFLTPSRSUMAsync(strFLTID, strDATOP, strDEP, strARR, null);
        }
        
        /// <remarks/>
        public void getFLTPSRSUMAsync(string strFLTID, string strDATOP, string strDEP, string strARR, object userState) {
            if ((this.getFLTPSRSUMOperationCompleted == null)) {
                this.getFLTPSRSUMOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFLTPSRSUMOperationCompleted);
            }
            this.InvokeAsync("getFLTPSRSUM", new object[] {
                        strFLTID,
                        strDATOP,
                        strDEP,
                        strARR}, this.getFLTPSRSUMOperationCompleted, userState);
        }
        
        private void OngetFLTPSRSUMOperationCompleted(object arg) {
            if ((this.getFLTPSRSUMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFLTPSRSUMCompleted(this, new getFLTPSRSUMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getFLTPSRCompletedEventHandler(object sender, getFLTPSRCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFLTPSRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFLTPSRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getFLTPSRClassCompletedEventHandler(object sender, getFLTPSRClassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFLTPSRClassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFLTPSRClassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void getFLTPSRSUMCompletedEventHandler(object sender, getFLTPSRSUMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFLTPSRSUMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFLTPSRSUMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591